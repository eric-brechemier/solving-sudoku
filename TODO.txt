1.
I noticed, using the visualizations of rating-sudoku project
(https://github.com/eric-brechemier/rating-sudoku) that advanced
strategies were used on sudoku puzzles that could be solved without
them: the current implementation will use a harder strategy to
identify a cell as soon as possible, which could be found with
an easier strategy, at the cost of extra steps.

In order to give an accurate representation of the difficulty
of sudoku puzzles, the implementation should delay the use of
harder strategies to a later step, when no progress can be made
with any easier strategy.

This behavior could be customized using an option parameter:
* shortest solution (using more complex strategies if needed)
* easiest path (using more steps if needed)
if the current behavior is to be preserved at all.

2.
The visualization of Sudoku #69 from Puzzler (2006) in rating-sudoku
shows a high number of cells unidentified with any of the three current
strategies. This may be due to a glitch in current implementation,
or the sign that a new strategy needs to be added.

=> the missing strategy is a generalization of the pattern matching
strategy, with "wildcards". I will merge it extend the pattern
matching strategy to take this new aspect into account.

For example: 459 459 459 in three cells is detected as a pattern,
but 459 459 49 is not detected. However, introducing a wildcard,
a pattern can be detected: 459 459 4*9. This represents the fact
that the number 5 is not allowed here, but can be added temporarily
to allowed hypotheses to complete the pattern, ignoring some knowledge
to allow the identification of the pattern.
